{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const getDataFromApi = createApi({\n  reducerPath: 'getDataFromApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:3000/'\n  }),\n  tagTypes: ['products', 'notes'],\n  endpoints: builder => ({\n    getProducts: builder.query({\n      query: () => `products`,\n      providesTags: ['products']\n    }),\n    getCategories: builder.query({\n      query: () => `categories`\n    }),\n    getNotes: builder.query({\n      query: () => `notes`,\n      providesTags: ['notes']\n    }),\n    deleteProduct: builder.mutation({\n      query: ({\n        id\n      }) => ({\n        url: `products/${id}`,\n        method: 'DELETE'\n      }),\n      invalidatesTags: ['products']\n    }),\n    updateQuantityProduct: builder.mutation({\n      query: ({\n        id,\n        body\n      }) => ({\n        url: `products/${id}`,\n        method: 'PATCH',\n        body\n      }),\n      invalidatesTags: ['products']\n    }),\n    createProduct: builder.mutation({\n      query: ({\n        body\n      }) => ({\n        url: `products`,\n        method: 'POST',\n        body\n      }),\n      invalidatesTags: ['products']\n    }),\n    createNote: builder.mutation({\n      query: ({\n        body\n      }) => ({\n        url: `notes`,\n        method: 'POST',\n        body\n      }),\n      invalidatesTags: ['products', 'notes']\n    })\n  })\n});\nexport const {\n  useGetProductsQuery,\n  useGetCategoriesQuery,\n  useDeleteProductMutation,\n  useUpdateQuantityProductMutation,\n  useCreateProductMutation,\n  useCreateNoteMutation\n} = getDataFromApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","getDataFromApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getProducts","query","providesTags","getCategories","getNotes","deleteProduct","mutation","id","url","method","invalidatesTags","updateQuantityProduct","body","createProduct","createNote","useGetProductsQuery","useGetCategoriesQuery","useDeleteProductMutation","useUpdateQuantityProductMutation","useCreateProductMutation","useCreateNoteMutation"],"sources":["/Users/ryan/framework-front/src/services/getData.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { CategoryType, NoteType, ProductType } from '../types'\n\ntype DeleteProduct = {\n    id: string;\n}\n\ntype PatchProduct = {\n    id: string;\n    body: {\n        quantity: number\n    }\n}\n\nexport type CreateProduct = {\n    body: {\n        name: string\n        description: string\n        note: string\n        price: number\n        quantity: number\n        image: string\n        created_at: string\n        has_to_be_consumed: string\n        isAvailable: boolean\n        category_id: string\n    }\n}\n\nexport type CreateNote = {\n    body: {\n        note: string\n        product_id: string\n    }\n}\n\nexport const getDataFromApi = createApi({\n    reducerPath: 'getDataFromApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:3000/' }),\n    tagTypes: ['products', 'notes'],\n    endpoints: (builder) => ({\n        getProducts: builder.query<ProductType[], void>({\n            query: () => `products`,\n            providesTags: ['products'],\n        }),\n        getCategories: builder.query<CategoryType[], void>({\n            query: () => `categories`,\n        }),\n        getNotes: builder.query<NoteType[], void>({\n            query: () => `notes`,\n            providesTags: ['notes'],\n        }),\n        deleteProduct: builder.mutation<string, DeleteProduct>({\n            query: ({ id }) => ({\n                url: `products/${id}`,\n                method: 'DELETE',\n            }),\n            invalidatesTags: ['products'],\n        }),\n        updateQuantityProduct: builder.mutation<string, PatchProduct>({\n            query: ({ id, body }) => ({\n                url: `products/${id}`,\n                method: 'PATCH',\n                body,\n            }),\n            invalidatesTags: ['products'],\n        }),\n        createProduct: builder.mutation<string, CreateProduct>({\n            query: ({ body }) => ({\n                url: `products`,\n                method: 'POST',\n                body,\n            }),\n            invalidatesTags: ['products'],\n        }),\n        createNote: builder.mutation<string, CreateNote>({\n            query: ({ body }) => ({\n                url: `notes`,\n                method: 'POST',\n                body,\n            }),\n            invalidatesTags: ['products', 'notes'],\n        }),\n    }),\n})\n\nexport const {\n    useGetProductsQuery,\n    useGetCategoriesQuery,\n    useDeleteProductMutation,\n    useUpdateQuantityProductMutation,\n    useCreateProductMutation,\n    useCreateNoteMutation\n} = getDataFromApi\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAoCxE,OAAO,MAAMC,cAAc,GAAGF,SAAS,CAAC;EACpCG,WAAW,EAAE,gBAAgB;EAC7BC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAyB,CAAC,CAAC;EAChEC,QAAQ,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;EAC/BC,SAAS,EAAGC,OAAO,KAAM;IACrBC,WAAW,EAAED,OAAO,CAACE,KAAK,CAAsB;MAC5CA,KAAK,EAAEA,CAAA,KAAM,UAAU;MACvBC,YAAY,EAAE,CAAC,UAAU;IAC7B,CAAC,CAAC;IACFC,aAAa,EAAEJ,OAAO,CAACE,KAAK,CAAuB;MAC/CA,KAAK,EAAEA,CAAA,KAAM;IACjB,CAAC,CAAC;IACFG,QAAQ,EAAEL,OAAO,CAACE,KAAK,CAAmB;MACtCA,KAAK,EAAEA,CAAA,KAAM,OAAO;MACpBC,YAAY,EAAE,CAAC,OAAO;IAC1B,CAAC,CAAC;IACFG,aAAa,EAAEN,OAAO,CAACO,QAAQ,CAAwB;MACnDL,KAAK,EAAEA,CAAC;QAAEM;MAAG,CAAC,MAAM;QAChBC,GAAG,EAAE,YAAYD,EAAE,EAAE;QACrBE,MAAM,EAAE;MACZ,CAAC,CAAC;MACFC,eAAe,EAAE,CAAC,UAAU;IAChC,CAAC,CAAC;IACFC,qBAAqB,EAAEZ,OAAO,CAACO,QAAQ,CAAuB;MAC1DL,KAAK,EAAEA,CAAC;QAAEM,EAAE;QAAEK;MAAK,CAAC,MAAM;QACtBJ,GAAG,EAAE,YAAYD,EAAE,EAAE;QACrBE,MAAM,EAAE,OAAO;QACfG;MACJ,CAAC,CAAC;MACFF,eAAe,EAAE,CAAC,UAAU;IAChC,CAAC,CAAC;IACFG,aAAa,EAAEd,OAAO,CAACO,QAAQ,CAAwB;MACnDL,KAAK,EAAEA,CAAC;QAAEW;MAAK,CAAC,MAAM;QAClBJ,GAAG,EAAE,UAAU;QACfC,MAAM,EAAE,MAAM;QACdG;MACJ,CAAC,CAAC;MACFF,eAAe,EAAE,CAAC,UAAU;IAChC,CAAC,CAAC;IACFI,UAAU,EAAEf,OAAO,CAACO,QAAQ,CAAqB;MAC7CL,KAAK,EAAEA,CAAC;QAAEW;MAAK,CAAC,MAAM;QAClBJ,GAAG,EAAE,OAAO;QACZC,MAAM,EAAE,MAAM;QACdG;MACJ,CAAC,CAAC;MACFF,eAAe,EAAE,CAAC,UAAU,EAAE,OAAO;IACzC,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EACTK,mBAAmB;EACnBC,qBAAqB;EACrBC,wBAAwB;EACxBC,gCAAgC;EAChCC,wBAAwB;EACxBC;AACJ,CAAC,GAAG3B,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}